plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
}

group 'org.qa-guru.practices'
version '1.0'

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    junitVersion = "5.8.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }

    }
}

dependencies {
    // Selenide
    testImplementation("com.codeborne:selenide:6.3.5")
    testRuntimeOnly('org.slf4j:slf4j-simple:1.7.32')

    // Selenoid file download
    testImplementation("org.selenide:selenide-selenoid:2.2.1")

    // JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    // Allure
    testImplementation("io.qameta.allure:allure-selenide:$allureVersion")

    // Asserts
    testImplementation('org.assertj:assertj-core:3.22.0')

    // Files Utils
    testImplementation("com.fasterxml.jackson.core:jackson-core:2.13.1")
    testImplementation('com.codeborne:pdf-test:1.7.0')
    testImplementation('com.codeborne:xls-test:1.4.0')
    testImplementation('com.opencsv:opencsv:5.6')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}